/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#define ZMK_BEHAVIORS_OMIT_KT

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        bindings = <&studio_unlock>;

        bracket_btn: bracket_btn {
            compatible = "zmk,behavior-tap-dance";
            label = "BRACKET_BTN";
            #binding-cells = <0>;
            bindings = <&kp LEFT_BRACKET>, <&kp RIGHT_BRACKET>;
        };

        space_ret_btn: space_ret_btn {
            compatible = "zmk,behavior-tap-dance";
            label = "SPACE_RET_BTN";
            #binding-cells = <0>;
            bindings = <&kp SPACE>, <&kp RET>;
        };

        grv_tild_btn: grv_tild_btn {
            compatible = "zmk,behavior-tap-dance";
            label = "GRV_TILD_BTN";
            #binding-cells = <0>;
            bindings = <&kp GRAVE>, <&kp TILDE>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        // GRAVE

        default_layer {
            bindings = <
&kp ESC    &kp N1  &kp N2  &kp N3    &kp N4  &kp N5                                    &kp N6    &kp N7  &kp N8     &kp N9   &kp N0    &kp MINUS
&kp TAB    &kp Q   &kp W   &kp E     &kp R   &kp T                                     &kp Y     &kp U   &kp I      &kp O    &kp P     &kp EQUAL
&kp LSHFT  &kp A   &kp S   &kp D     &kp F   &kp G                                     &kp H     &kp J   &kp K      &kp L    &kp SEMI  &kp SQT
&kp LCTRL  &kp Z   &kp X   &kp C     &kp V   &kp B     &bracket_btn    &kp RBKT        &kp N     &kp M   &kp COMMA  &kp DOT  &kp FSLH  &kp RSHFT
                           &kp LALT  &mo 1   &kp LGUI  &kp SPACE       &space_ret_btn  &kp BSPC  &mo 2   &kp RET
            >;
        };

        lower_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans  &to 3     &trans  &trans  &trans  &trans
            >;
        };

        raise_layer {
            bindings = <
&kp GRAVE  &kp F1  &kp F2  &kp F3   &kp F4   &kp F5                       &kp F6       &kp F7     &kp F8        &kp F9     &kp F10    &trans
&trans     &kp N1  &kp N2  &kp N3   &kp N4   &kp N5                       &kp PG_UP    &kp HOME   &kp UP_ARROW  &kp END    &kp N0     &trans
&trans     &kp F2  &kp F3  &kp F4   &kp F5   &kp F6                       &kp PG_DN    &kp LEFT   &kp DOWN      &kp RIGHT  &kp RIGHT  &trans
&trans     &kp F8  &kp F9  &kp F10  &kp F11  &kp F12  &trans     &trans   &kp KP_PLUS  &kp MINUS  &kp EQUAL     &kp LBKT   &kp RBKT   &kp BSLH
                           &trans   &trans   &trans   &kp F11    &kp F12  &trans       &trans     &trans
            >;
        };

        cfg_layer {
            bindings = <
&bt BT_CLR  &bt BT_SEL 0      &bt BT_SEL 1       &bt BT_SEL 2       &bt BT_SEL 3  &bt BT_SEL 4                    &none  &none  &none  &none  &none  &none
&none       &none             &none              &none              &none         &none                           &none  &none  &none  &none  &none  &none
&none       &none             &none              &none              &none         &none                           &none  &none  &none  &none  &none  &none
&none       &ext_power EP_ON  &ext_power EP_OFF  &ext_power EP_TOG  &none         &studio_unlock  &none    &none  &none  &none  &none  &none  &none  &none
                                                 &none              &to 0         &none           &none    &none  &none  &none  &none
            >;
        };
    };
};
